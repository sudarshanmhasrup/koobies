[versions]
# Library and plugin versions
kotlin = "2.2.21"
androidGradlePlugin = "8.13.0"
activity = "1.11.0"
splashScreen = "1.0.1"
composeMultiplatform = "1.9.1"
material3 = "1.2.0"
navigation = "2.9.1"
hotReload = "1.0.0-rc02"
lifecycle = "2.9.5"
serialization = "1.9.0"
coroutines = "1.10.2"
koin = "4.1.1"
datastore = "1.1.7"
localina = "1.0.0-alpha2"

# user-app:android module's configuration information
userApp-android-group = "org.koobies.android"
userApp-android-version = "1.0.0"

# user-app:android module's android app package information
userApp-android-namespace = "org.koobies.android"
userApp-android-compileSdk = "36"
userApp-android-applicationId = "org.koobies.android"
userApp-android-minSdk = "24"
userApp-android-targetSdk = "36"
userApp-android-versionCode = "1"
userApp-android-versionName = "1.0.0"

# user-app:desktop module's configuration information
userApp-desktop-group = "org.koobies.desktop"
userApp-desktop-version = "1.0.0"
userApp-desktop-mainClass = "org.koobies.desktop.MainKt"

# user-app:desktop module's distribution information
userApp-desktop-distributionPackageName = "Koobies"
userApp-desktop-distributionPackageVersion = "1.0.0"

# user-app:compose module's android library package information
userApp-compose-androidLibrary-namespace = "koobies.compose.app"
userApp-compose-androidLibrary-compileSdk = "36"
userApp-compose-androidLibrary-minSdk = "24"

# shared module's configuration information
shared-group = "koobies.shared.app"
shared-version = "1.0.0"
shared-packageOfResClass = "koobies.shared.app.resources"

# shared module's android library package information
shared-androidLibrary-namespace = "koobies.shared.app"
shared-androidLibrary-compileSdk = "36"
shared-androidLibrary-minSdk = "24"

# design-system:compose module's android library package information
designSystem-compose-androidLibrary-namespace = "compose.design.system"
designSystem-compose-androidLibrary-compileSdk = "36"
designSystem-compose-androidLibrary-minSdk = "24"

# features:user-onboarding module's android library package information
features-userOnboarding-androidLibrary-namespace = "user.onboarding.feature"
features-userOnboarding-androidLibrary-compileSdk = "36"
features-userOnboarding-androidLibrary-minSdk = "24"

[libraries]
# Android dependencies
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity" }
core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "splashScreen" }
# Compose Multiplatform dependencies
compose-multiplatform-runtime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "composeMultiplatform" }
compose-multiplatform-resources = { module = "org.jetbrains.compose.components:components-resources", version.ref = "composeMultiplatform" }
compose-multiplatform-components-ui-tooling-preview = { module = "org.jetbrains.compose.components:components-ui-tooling-preview", version.ref = "composeMultiplatform" }
compose-multiplatform-ui-tooling-preview = { module = "org.jetbrains.compose.ui:ui-tooling-preview", version.ref = "composeMultiplatform" }
compose-multiplatform-foundation = { module = "org.jetbrains.compose.foundation:foundation", version.ref = "composeMultiplatform" }
compose-multiplatform-material3-adaptive = { module = "org.jetbrains.compose.material3.adaptive:adaptive", version.ref = "material3" }
compose-multiplatform-navigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigation" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
compose-multiplatform-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
compose-multiplatform-lifecycle-runtime = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
# Koin dependencies
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
# Persitent storage dependencies
datastore = { module = "androidx.datastore:datastore", version.ref = "datastore" }
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
# Other dependencies
localina = { module = "io.github.sudarshanmhasrup.localina:localina", version.ref = "localina" }

[bundles]
# Compose multiplatform bundles
compose-multiplatform = [
    "compose-multiplatform-runtime", "compose-multiplatform-resources", "compose-multiplatform-navigation",
    "compose-multiplatform-components-ui-tooling-preview", "compose-multiplatform-foundation",
]
compose-multiplatform-lifecycle = ["compose-multiplatform-viewmodel", "compose-multiplatform-lifecycle-runtime"]
# Koin bundles
koin-multiplatform = ["koin-core", "koin-compose", "koin-compose-viewmodel"]
koin-android = ["koin-core", "koin-android"]
# Persitent storage bundles
datastore = ["datastore", "datastore-preferences"]

[plugins]
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-kotlin-multiplatform-library = { id = "com.android.kotlin.multiplatform.library", version.ref = "androidGradlePlugin" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
compose-hot-reload = { id = "org.jetbrains.compose.hot-reload", version.ref = "hotReload" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }